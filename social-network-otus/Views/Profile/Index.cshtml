@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<social_network_otus.Data.Models.ApplicationUser>
@{
    var index = 0;
}

<div class="container-fluid" id="profileIndexContainer">
    <div class="row">
        <div class="col-12">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="User name" aria-label="UserName"
                       v-model="userName"
                       @@keyup.enter="search"
                       @@input="userNameInputChange($event)">
                <input type="text" class="form-control" placeholder="User last name" aria-label="UserLastName"
                       v-model="userLastName"
                       @@keyup.enter="search"
                       @@input="userLastNameInputChange($event)">

                <div class="input-group-append">
                    <button class="btn btn-outline-success"
                            :class="{ disabled: searchBtnDisabled }"
                            @@click="search"
                            type="button">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="row">
                <h3 class="col-4"><span class="badge badge-dark">Name</span></h3>
                <h3 class="col-4"><span class="badge badge-dark">Last Name</span></h3>
                <h3 class="col-4 pl-0"> <span class="badge badge-dark">Action</span></h3>
            </div>
        </div>
        <div class="col-12">
            <div class="row" v-for="(item, index) in filteredUsers">

                <p class="col-md-4">{{item.userName}}</p>
                <p class="col-md-4">{{item.userLastName}}</p>
                <button class="btn btn-info col-md-2 mt-2" type="button"
                        data-toggle="collapse" :data-target="'#Item'+index">
                    Details
                </button>
                <br />
                <div class="collapse container-fluid mt-2" :id="'Item'+ index">
                    <div class="row">

                        <h5 class="col-md-4"><span class="badge badge-secondary">Email</span></h5>
                        <h5 class="col-md-4"><span class="badge badge-secondary">RangeOfInterests</span></h5>
                        <h5 class="col-md-4 pl-0"> <span class="badge badge-secondary">BirthDate</span></h5>
                        <p class="col-md-4">{{item.email}}</p>
                        <p class="col-md-4">{{item.rangeOfInterests}}</p>
                        <p class="col-md-4">{{item.birthDate}}</p>
                    </div>

                </div>
                <br />
            </div>
        </div>
    </div>
</div>
@section Scripts
{

    <script asp-append-version="true">

        const profileIndexContainer = {
            data() {
                return {
                    count: 10,
                    skip: 0,
                    userName: '',
                    userLastName: '',
                    filteredUsers: [],
                    searchBtnDisabled: false
                }
            },

            methods:
            {
                async search() {
                    try {
                        const url = `/Profile/Search?userName=${this.userName}&userLastName=${this.userLastName}`;
                        const resp = await window.axios.get(url);
                        this.filteredUsers = resp.data;
                    } catch (error) {
                        console.error(error);
                    }
                },

                async getTopTen() {
                    try {
                        const url = `/Profile/GetPaginated?count=${this.count}&skip=${this.skip}`;
                        const resp = await window.axios.get(url);
                        this.filteredUsers = resp.data;
                    } catch (error) {
                        console.error(error);
                    }
                },

                userNameInputChange(event) {
                    if (this.searchBtnDisabled === true) {
                        this.searchBtnDisabled = false;
                    }
                    console.log(event);
                },

                userLastNameInputChange(event) {
                    if (this.searchBtnDisabled === true) {
                        this.searchBtnDisabled = false;
                    }

                    console.log(event);
                },
            },

            async created() {
                this.searchBtnDisabled = true;
                await this.getTopTen();
            }
        };

        Vue.createApp(profileIndexContainer).mount('#profileIndexContainer');

    </script>
}
